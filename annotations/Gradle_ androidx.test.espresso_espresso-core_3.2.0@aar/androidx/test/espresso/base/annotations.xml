<root>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingResourceRegistry_Factory androidx.test.espresso.base.IdlingResourceRegistry get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ViewFinderImpl_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideSdkAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideSdkAsyncTaskMonitor(androidx.test.espresso.base.ThreadPoolExecutorExtractor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory androidx.test.espresso.base.ThreadPoolExecutorExtractor newInstance(android.os.Looper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule java.util.concurrent.Executor provideMainThreadExecutor(android.os.Looper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory androidx.test.internal.platform.os.ControlledLooper get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory androidx.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService provideRemoteExecutor(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory androidx.test.espresso.FailureHandler provideFailureHandler(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;android.os.Looper&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ActiveRootLister java.util.List&lt;androidx.test.espresso.Root&gt; listActiveRoots()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideSdkAsyncTaskMonitor(androidx.test.espresso.base.ThreadPoolExecutorExtractor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideSdkAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_FailureHandlerHolder_Factory androidx.test.espresso.base.BaseLayerModule_FailureHandlerHolder_Factory create(javax.inject.Provider&lt;androidx.test.espresso.FailureHandler&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory android.os.Looper provideMainLooper(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory create(androidx.test.espresso.base.UiControllerModule, javax.inject.Provider&lt;androidx.test.espresso.base.UiControllerImpl&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; provideDynamicNotifer(androidx.test.espresso.base.IdlingResourceRegistry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory androidx.test.espresso.base.EventInjector get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory androidx.test.runner.lifecycle.ActivityLifecycleMonitor provideLifecycleMonitor(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_Factory androidx.test.espresso.base.RootViewPicker newInstance(androidx.test.espresso.UiController, java.lang.Object, androidx.test.runner.lifecycle.ActivityLifecycleMonitor, java.util.concurrent.atomic.AtomicReference&lt;java.lang.Boolean&gt;, androidx.test.internal.platform.os.ControlledLooper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ViewFinderImpl_Factory androidx.test.espresso.base.ViewFinderImpl_Factory create(javax.inject.Provider&lt;org.hamcrest.Matcher&lt;android.view.View&gt;&gt;, javax.inject.Provider&lt;android.view.View&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory androidx.test.espresso.FailureHandler get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory android.os.Looper get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler_Factory androidx.test.espresso.base.DefaultFailureHandler get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory create(javax.inject.Provider&lt;android.os.Looper&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; provideDynamicNotifer(androidx.test.espresso.base.IdlingResourceRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory androidx.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService provideRemoteExecutor(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(androidx.test.espresso.base.BaseLayerModule, android.content.Context) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory androidx.test.internal.platform.os.ControlledLooper provideControlledLooper(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideSdkAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;android.content.Context&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory create(javax.inject.Provider&lt;androidx.test.espresso.base.ActiveRootLister&gt;, javax.inject.Provider&lt;java.util.concurrent.atomic.AtomicReference&lt;org.hamcrest.Matcher&lt;androidx.test.espresso.Root&gt;&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideCompatAsyncTaskMonitor(androidx.test.espresso.base.ThreadPoolExecutorExtractor)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory android.content.Context provideTargetContext(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootsOracle_Factory androidx.test.espresso.base.RootsOracle get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler_Factory androidx.test.espresso.base.DefaultFailureHandler newInstance(android.content.Context) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(androidx.test.espresso.base.BaseLayerModule, android.content.Context) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker android.view.View get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory androidx.test.espresso.FailureHandler provideFailureHandler(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory androidx.test.espresso.FailureHandler provideFailureHandler(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory android.content.Context get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootsOracle_Factory androidx.test.espresso.base.RootsOracle newInstance(android.os.Looper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_FailureHandlerHolder_Factory androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.EventInjector provideEventInjector()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootsOracle_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.RootsOracle&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory androidx.test.espresso.UiController provideUiController(androidx.test.espresso.base.UiControllerModule, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.DefaultFailureHandler&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingResourceRegistry_Factory androidx.test.espresso.base.IdlingResourceRegistry_Factory create(javax.inject.Provider&lt;android.os.Looper&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory androidx.test.espresso.base.ActiveRootLister provideActiveRootLister(androidx.test.espresso.base.BaseLayerModule, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory androidx.test.internal.platform.os.ControlledLooper provideControlledLooper(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootsOracle_Factory androidx.test.espresso.base.RootsOracle_Factory create(javax.inject.Provider&lt;android.os.Looper&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory androidx.test.espresso.FailureHandler get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler DefaultFailureHandler(android.content.Context) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory androidx.test.espresso.base.EventInjector provideEventInjector(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory androidx.test.espresso.base.DefaultFailureHandler get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; provideDynamicNotifer(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.IdlingResourceRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ViewFinderImpl_Factory androidx.test.espresso.base.ViewFinderImpl get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory java.util.concurrent.Executor provideMainThreadExecutor(androidx.test.espresso.base.BaseLayerModule, android.os.Looper) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_FailureHandlerHolder_Factory androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder newInstance(androidx.test.espresso.FailureHandler)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory androidx.test.espresso.base.RootViewPicker.RootResultFetcher get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler_Factory androidx.test.espresso.base.DefaultFailureHandler newInstance(android.content.Context)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService provideRemoteExecutor()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory androidx.test.espresso.base.DefaultFailureHandler provideDefaultFailureHander(androidx.test.espresso.base.BaseLayerModule, android.content.Context)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory androidx.test.espresso.base.BaseLayerModule_ProvideSdkAsyncTaskMonitorFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.ThreadPoolExecutorExtractor&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingResourceRegistry void registerLooper(android.os.Looper, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_Factory androidx.test.espresso.base.RootViewPicker_Factory create(javax.inject.Provider&lt;androidx.test.espresso.UiController&gt;, javax.inject.Provider&lt;androidx.test.espresso.base.RootViewPicker.RootResultFetcher&gt;, javax.inject.Provider&lt;androidx.test.runner.lifecycle.ActivityLifecycleMonitor&gt;, javax.inject.Provider&lt;java.util.concurrent.atomic.AtomicReference&lt;java.lang.Boolean&gt;&gt;, javax.inject.Provider&lt;androidx.test.internal.platform.os.ControlledLooper&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideCompatAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory android.content.Context provideTargetContext(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ViewFinderImpl_Factory androidx.test.espresso.base.ViewFinderImpl newInstance(org.hamcrest.Matcher&lt;android.view.View&gt;, javax.inject.Provider&lt;android.view.View&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideCompatAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl_Factory create(javax.inject.Provider&lt;androidx.test.espresso.base.EventInjector&gt;, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt;&gt;, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt;&gt;, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, javax.inject.Provider&lt;android.os.Looper&gt;, javax.inject.Provider&lt;androidx.test.espresso.base.IdlingResourceRegistry&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; provideDynamicNotifer(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.IdlingResourceRegistry) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory androidx.test.espresso.UiController provideUiController(androidx.test.espresso.base.UiControllerModule, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory androidx.test.espresso.base.ActiveRootLister provideActiveRootLister(androidx.test.espresso.base.BaseLayerModule, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.BaseLayerModule.FailureHandlerHolder&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory androidx.test.espresso.FailureHandler provideFailureHander(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.DefaultFailureHandler) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory androidx.test.runner.lifecycle.ActivityLifecycleMonitor get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHandlerFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.ThreadPoolExecutorExtractor_Factory androidx.test.espresso.base.ThreadPoolExecutorExtractor get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.IdlingResourceRegistry&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideRemoteExecutorFactory androidx.test.espresso.core.internal.deps.guava.util.concurrent.ListeningExecutorService get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideCompatAsyncTaskMonitor(androidx.test.espresso.base.ThreadPoolExecutorExtractor) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt; provideDynamicNotifer(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.IdlingResourceRegistry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDefaultFailureHanderFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.DefaultFailureHandler_Factory androidx.test.espresso.base.DefaultFailureHandler_Factory create(javax.inject.Provider&lt;android.content.Context&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory androidx.test.espresso.base.IdleNotifier&lt;java.lang.Runnable&gt; provideCompatAsyncTaskMonitor(androidx.test.espresso.base.BaseLayerModule, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory java.util.concurrent.Executor get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingResourceRegistry_Factory androidx.test.espresso.base.IdlingResourceRegistry newInstance(android.os.Looper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory androidx.test.espresso.base.BaseLayerModule_ProvideTargetContextFactory create(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainLooperFactory android.os.Looper provideMainLooper(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory androidx.test.espresso.base.RootViewPicker.RootResultFetcher newInstance(androidx.test.espresso.base.ActiveRootLister, java.util.concurrent.atomic.AtomicReference&lt;org.hamcrest.Matcher&lt;androidx.test.espresso.Root&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerModule_ProvideUiControllerFactory androidx.test.espresso.UiController get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingResourceRegistry_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory androidx.test.espresso.base.RootViewPicker.RootResultFetcher newInstance(androidx.test.espresso.base.ActiveRootLister, java.util.concurrent.atomic.AtomicReference&lt;org.hamcrest.Matcher&lt;androidx.test.espresso.Root&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideDynamicNotiferFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_RootResultFetcher_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideActiveRootListerFactory androidx.test.espresso.base.ActiveRootLister get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideControlledLooperFactory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideMainThreadExecutorFactory java.util.concurrent.Executor provideMainThreadExecutor(androidx.test.espresso.base.BaseLayerModule, android.os.Looper)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.UiControllerImpl_Factory androidx.test.espresso.base.UiControllerImpl newInstance(java.lang.Object, java.lang.Object, java.lang.Object, javax.inject.Provider&lt;androidx.test.espresso.base.IdleNotifier&lt;androidx.test.espresso.base.IdlingResourceRegistry.IdleNotificationCallback&gt;&gt;, android.os.Looper, androidx.test.espresso.base.IdlingResourceRegistry) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideEventInjectorFactory androidx.test.espresso.base.EventInjector provideEventInjector(androidx.test.espresso.base.BaseLayerModule) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_FailureHandlerHolder_Factory java.lang.Object get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory androidx.test.espresso.base.BaseLayerModule_ProvideCompatAsyncTaskMonitorFactory create(androidx.test.espresso.base.BaseLayerModule, javax.inject.Provider&lt;androidx.test.espresso.base.ThreadPoolExecutorExtractor&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.IdlingUiController androidx.test.espresso.base.IdlingResourceRegistry getIdlingResourceRegistry()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideFailureHanderFactory androidx.test.espresso.FailureHandler provideFailureHander(androidx.test.espresso.base.BaseLayerModule, androidx.test.espresso.base.DefaultFailureHandler)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.BaseLayerModule_ProvideLifecycleMonitorFactory androidx.test.runner.lifecycle.ActivityLifecycleMonitor provideLifecycleMonitor(androidx.test.espresso.base.BaseLayerModule)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='androidx.test.espresso.base.RootViewPicker_Factory androidx.test.espresso.base.RootViewPicker get()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
